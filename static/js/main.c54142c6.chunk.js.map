{"version":3,"sources":["helpers/fetchData.js","helpers/legendXPosLayout.js","helpers/legendYPosLayout.js","helpers/wrap.js","helpers/chart.js","App.js","index.js"],"names":["useFetch","url","useState","data","setData","loading","setLoading","a","fetch","response","json","useEffect","fetchUrl","legendXPosLayout","i","legendYPosLayout","wrap","text","width","each","word","d3","this","words","split","reverse","line","lineNumber","x","attr","y","tspan","append","dy","pop","push","join","node","getComputedTextLength","render","ref","height","svg","current","margin","innerWidth","innerHeight","dataName","d","name","dataCategory","category","dataValue","value","xValue","x0","yValue","y0","titleXAxisPos","categoriesFill","Wii","DS","X360","GB","PS3","NES","PS","N64","PS2","PS4","SNES","GBA","XB","PC","PSP","XOne","treemap","root","sum","sort","b","size","titleSection","titleYAxisPos","tooltip","style","tileGrouping","selectAll","leaves","enter","x1","tileWidth","y1","tileHeight","on","transition","duration","html","pageX","pageY","call","categoriesFillArray","Object","entries","legendGrouping","App","useRef","length","className","viewBox","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c54142c6.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchUrl() {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    setData(json);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n  return [data, loading];\r\n}\r\n\r\nexport { useFetch };\r\n","/* legendXPosLayout is a helper function that defines spacing between \r\nlegend's elements on the x-axis */\r\nconst legendXPosLayout = (i) => {\r\n  if (i < 6) {\r\n    return 0;\r\n  } else if (i < 12) {\r\n    return 80;\r\n  } else {\r\n    return 160;\r\n  }\r\n};\r\n\r\nexport { legendXPosLayout };\r\n","/* legendYPosLayout is a helper function that defines spacing between \r\nlegend's elements on the y-axis */\r\nconst legendYPosLayout = (i) => {\r\n  switch (i) {\r\n    case 0:\r\n    case 6:\r\n    case 12:\r\n      return 0;\r\n    case 1:\r\n    case 7:\r\n    case 13:\r\n      return 20;\r\n    case 2:\r\n    case 8:\r\n    case 14:\r\n      return 40;\r\n    case 3:\r\n    case 9:\r\n    case 15:\r\n      return 60;\r\n    case 4:\r\n    case 10:\r\n    case 16:\r\n      return 80;\r\n    case 5:\r\n    case 11:\r\n    case 17:\r\n      return 100;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport { legendYPosLayout };\r\n","import * as d3 from \"d3\";\r\n\r\n// wrap is a function that wraps the text elements within each tile\r\nexport default function wrap(text, width) {\r\n  text.each(function () {\r\n    var text = d3.select(this),\r\n      words = text.text().split(/\\s+/).reverse(),\r\n      word,\r\n      line = [],\r\n      lineNumber = 0,\r\n      lineHeight = 1.1, // ems\r\n      x = text.attr(\"x\"),\r\n      y = text.attr(\"y\"),\r\n      dy = 0, //parseFloat(text.attr(\"dy\")),\r\n      tspan = text\r\n        .text(null)\r\n        .append(\"tspan\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y)\r\n        .attr(\"dy\", dy + \"em\");\r\n    while ((word = words.pop())) {\r\n      line.push(word);\r\n      tspan.text(line.join(\" \"));\r\n      if (tspan.node().getComputedTextLength() > width) {\r\n        line.pop();\r\n        tspan.text(line.join(\" \"));\r\n        line = [word];\r\n        tspan = text\r\n          .append(\"tspan\")\r\n          .attr(\"x\", x)\r\n          .attr(\"y\", y)\r\n          .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\r\n          .text(word);\r\n      }\r\n    }\r\n  });\r\n}\r\n","import * as d3 from \"d3\";\r\n\r\nimport { legendXPosLayout } from \"./legendXPosLayout\";\r\nimport { legendYPosLayout } from \"./legendYPosLayout\";\r\n\r\nimport wrap from \"./wrap\";\r\n\r\nexport default function render(data, ref, width, height) {\r\n  const svg = d3.select(ref.current);\r\n\r\n  // define space for the treemap\r\n  const margin = { top: 80, right: 80, bottom: 150, left: 80 };\r\n  const innerWidth = width - margin.right - margin.left;\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n\r\n  const dataName = (d) => d.data.name;\r\n  const dataCategory = (d) => d.data.category;\r\n  const dataValue = (d) => d.data.value;\r\n\r\n  const xValue = (d) => d.x0;\r\n  const yValue = (d) => d.y0;\r\n  const tileWidth = (d) => d.x1 - xValue(d);\r\n  const tileHeight = (d) => d.y1 - yValue(d);\r\n\r\n  // Create and position axes text labels and the title\r\n  const titleText = \"Video Game Sales\";\r\n  const titleXAxisPos = innerWidth / 2;\r\n  const titleYAxisPos = -30;\r\n\r\n  const subtitleText = \"Top 100 Most Sold Video Games Grouped by Platform\";\r\n  const subtitleYAxisPos = titleYAxisPos + 22;\r\n\r\n  // categoriesFill defines color scheme for each tile grouping\r\n  const categoriesFill = {\r\n    Wii: \"rgb(76, 146, 195)\",\r\n    DS: \"rgb(190, 210, 237)\",\r\n    X360: \"rgb(254, 153, 61)\",\r\n    GB: \"rgb(254, 201, 147)\",\r\n    PS3: \"rgb(86, 180, 86)\",\r\n    NES: \"rgb(174, 229, 161)\",\r\n    \"3DS\": \"rgb(254, 173, 170)\",\r\n    PS: \"rgb(163, 120, 111)\",\r\n    N64: \"rgb(209, 176, 169)\",\r\n    PS2: \"rgb(222, 82, 83)\",\r\n    PS4: \"rgb(169, 134, 202)\",\r\n    SNES: \"rgb(208, 192, 221)\",\r\n    GBA: \"rgb(234, 116, 206)\",\r\n    XB: \"rgb(249, 197, 219)\",\r\n    PC: \"rgb(153, 153, 153)\",\r\n    \"2600\": \"rgb(199, 200, 202)\",\r\n    PSP: \"rgb(202, 200, 81)\",\r\n    XOne: \"rgb(226, 227, 170)\"\r\n  };\r\n\r\n  // define and append treemap to the svg\r\n  const treemap = svg\r\n    .append(\"g\")\r\n    .attr(\"id\", \"treemap\")\r\n    .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n  let root = d3\r\n    .hierarchy(data)\r\n    .sum((d) => d.value)\r\n    .sort(function (a, b) {\r\n      return b.height - a.height || b.value - a.value;\r\n    });\r\n\r\n  d3.treemap().size([innerWidth, innerHeight])(root);\r\n\r\n  // append the title section\r\n  const titleSection = treemap.append(\"g\").attr(\"text-anchor\", \"middle\");\r\n\r\n  titleSection\r\n    .append(\"text\")\r\n    .attr(\"id\", \"title\")\r\n    .attr(\"x\", titleXAxisPos)\r\n    .attr(\"y\", titleYAxisPos)\r\n    .text(titleText);\r\n\r\n  titleSection\r\n    .append(\"text\")\r\n    .attr(\"id\", \"description\")\r\n    .attr(\"x\", titleXAxisPos)\r\n    .attr(\"y\", subtitleYAxisPos)\r\n    .text(subtitleText);\r\n\r\n  // define tooltips initial setting\r\n  let tooltip = d3\r\n    .select(\"body\")\r\n    .append(\"div\")\r\n    .attr(\"id\", \"tooltip\")\r\n    .style(\"opacity\", 0);\r\n\r\n  // append tiles\r\n  const tileGrouping = treemap\r\n    .selectAll(null)\r\n    .data(root.leaves())\r\n    .enter()\r\n    .append(\"g\")\r\n    .attr(\"transform\", (d) => `translate(${xValue(d)}, ${yValue(d)})`);\r\n\r\n  tileGrouping\r\n    .append(\"rect\")\r\n    .attr(\"class\", \"tile\")\r\n    .attr(\"data-name\", (d) => dataName(d))\r\n    .attr(\"data-category\", (d) => dataCategory(d))\r\n    .attr(\"data-value\", (d) => dataValue(d))\r\n    .attr(\"width\", (d) => tileWidth(d))\r\n    .attr(\"height\", (d) => tileHeight(d))\r\n    .style(\"fill\", (d) => categoriesFill[dataCategory(d)])\r\n    .on(\"mouseover\", (d) => {\r\n      tooltip.transition().duration(100).style(\"opacity\", 0.9);\r\n      tooltip\r\n        .html(\r\n          `Name: ${dataName(d)} \r\n                        </br>Category: ${dataCategory(d)}\r\n                        </br>Value: ${dataValue(d)}`\r\n        )\r\n        .style(\"left\", d3.event.pageX - 50 + \"px\")\r\n        .style(\"top\", d3.event.pageY - 120 + \"px\")\r\n        .attr(\"data-value\", dataValue(d));\r\n    })\r\n    .on(\"mouseout\", (d) => {\r\n      tooltip.transition().duration(500).style(\"opacity\", 0);\r\n    });\r\n\r\n  tileGrouping\r\n    .append(\"text\")\r\n    .attr(\"class\", \"tileText\")\r\n    .attr(\"x\", 3)\r\n    .attr(\"y\", 10)\r\n    .text((d) => dataName(d))\r\n    .call(wrap, 45);\r\n\r\n  const categoriesFillArray = Object.entries(categoriesFill);\r\n\r\n  // append the legend element\r\n  const legend = svg\r\n    .append(\"g\")\r\n    .attr(\"id\", \"legend\")\r\n    .attr(\"transform\", `translate(${innerWidth / 2}, ${innerHeight + 100})`);\r\n\r\n  const legendGrouping = legend\r\n    .selectAll(\"g\")\r\n    .data(categoriesFillArray)\r\n    .enter()\r\n    .append(\"g\");\r\n\r\n  legendGrouping\r\n    .append(\"rect\")\r\n    .attr(\"class\", \"legend-item\")\r\n    .attr(\"x\", (d, i) => legendXPosLayout(i))\r\n    .attr(\"y\", (d, i) => legendYPosLayout(i))\r\n    .attr(\"width\", 15)\r\n    .attr(\"height\", 15)\r\n    .style(\"fill\", (d) => d[1]);\r\n\r\n  legendGrouping\r\n    .append(\"text\")\r\n    .attr(\"class\", \"legend-item-text\")\r\n    .attr(\"x\", (d, i) => legendXPosLayout(i) + 20)\r\n    .attr(\"y\", (d, i) => legendYPosLayout(i) + 10)\r\n    .text((d) => d[0]);\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\nimport \"./styles/main.scss\";\n\nimport { useFetch } from \"./helpers/fetchData\";\nimport render from \"./helpers/chart\";\n\nexport default function App() {\n  const WIDTH = 1260;\n  const HEIGHT = 600;\n  const DATA_LINK =\n    \"https://cdn.freecodecamp.org/testable-projects-fcc/data/tree_map/video-game-sales-data.json\";\n  const [data, loading] = useFetch(DATA_LINK);\n  const ref = useRef();\n\n  useEffect(() => {\n    if (data.length !== 0) {\n      render(data, ref, WIDTH, HEIGHT);\n    }\n  }, [loading]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"viz-container\">\n        <svg className=\"graph\" ref={ref} viewBox={`0 0 ${WIDTH} ${HEIGHT}`} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}